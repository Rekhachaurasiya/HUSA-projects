<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-379A2RE2" failures="0" tests="40" name="Default test" time="2696.924" errors="0" timestamp="2021-05-26T20:10:15 IST">
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="0.023">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.relevantcodes.extentreports.ExtentTest.assignCategory(String[])&amp;quot; because &amp;quot;main.java.utility.Projectcommonmethods.test&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.relevantcodes.extentreports.ExtentTest.assignCategory(String[])" because "main.java.utility.Projectcommonmethods.test" is null
at main.java.utility.Projectcommonmethods.beforeMethod(Projectcommonmethods.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:61)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:366)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:320)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:701)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040014935E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040014937E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040014947E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.62204001495E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.62204001496E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040014962E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040014968E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.62204001497E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040014977E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040014979E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040014985E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040014987E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040014991E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040014993E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040014997E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040014999E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015003E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015005E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015011E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015012E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015018E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015019E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015025E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015027E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015031E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015033E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015038E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015039E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015045E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015048E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015063E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015067E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015071E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015078E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015083E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015084E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015088E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015089E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015092E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015094E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015097E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015099E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015101E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015103E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015106E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015107E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.62204001511E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015111E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015113E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015114E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015117E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015119E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015121E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015122E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015126E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015127E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015129E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.62204001513E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015132E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015133E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015136E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015137E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015143E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015145E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015149E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015151E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015158E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.62204001516E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015163E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015164E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015168E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015169E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015172E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015174E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015177E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015179E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.622040015182E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@BeforeMethod beforeMethod" time="-1.622040015183E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="main.java.utility.Projectcommonmethods" name="@AfterMethod afterMethod" time="-1.62204001519E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
  <testcase classname="main.java.utility.Invokeapp" name="TestCase" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase -->
</testsuite> <!-- Default test -->
